@{
    ViewBag.Title = "Funny";
}

<!-- negative margin to leave no space between title well and menu -->
<div style="margin-top: -13px;">
    <!-- previous -->
    <div id="Previous" class="col-xs-1 carousel-control left" style="cursor: pointer; top: 50px; z-index: 1; position: fixed;">
        <a role="button">
            <span class="glyphicon glyphicon-chevron-left" aria-hidden="true"></span>
            <span class="sr-only">Previous</span>
        </a>
    </div>
    <!-- content-->
    <div id="Content" class="col-xs-10 carousel-inner" style="z-index: 0; display:none">
        <!-- title -->
        <div class="well well-sm" style="margin: 0px; background: #ffffff;">
            <h4 id="Title" style="text-align:center;">Add title here</h4>
        </div>
        <!-- picture -->
        <div style="margin: 7px 0px 0px 0px;">
            <img id="Image" src="" style="max-width: 100%; max-height: 100%; cursor: pointer;" class="center-block">
        </div>
        <!-- source, 3 comments -->
        <div class="panel panel-default" style="margin: 7px 0px 0px 0px;">
            <div class="panel-heading" style="text-align: center; background: #ffffff;">
                <a id="Source" href="" target="_blank">Source</a>
            </div>
            <div id="Comments" class="panel-body">
                <p>Insert comment</p>
                <p>Insert comment</p>
                <p>Insert comment</p>
            </div>
        </div>
    </div>
    <div id="ContentLoading" class="col-xs-10 carousel-inner">
        <div id="circularG" class="center-block" style="margin-top: 100px;">
            <div id="circularG_1" class="circularG">
            </div>
            <div id="circularG_2" class="circularG">
            </div>
            <div id="circularG_3" class="circularG">
            </div>
            <div id="circularG_4" class="circularG">
            </div>
            <div id="circularG_5" class="circularG">
            </div>
            <div id="circularG_6" class="circularG">
            </div>
            <div id="circularG_7" class="circularG">
            </div>
            <div id="circularG_8" class="circularG">
            </div>
        </div>
    </div>
    <!-- next -->
    <div id="Next" class="col-xs-1 carousel-control right" style="cursor: pointer; top: 50px; z-index: 1; position: fixed;">
        <a role="button">
            <span class="glyphicon glyphicon-chevron-right" aria-hidden="true"></span>
            <span class="sr-only">Next</span>
        </a>
    </div>
</div>

<!-- bottom bar, for about button -->
<nav class="navbar-fixed-bottom hidden-xs">
    <div class="col-sm-1" style="margin-bottom: 7px;">
        <button id="about" class="btn btn-info">About</button>
    </div>
</nav>

<!-- about modal dialog -->
<div class="modal fade" id="aboutModal" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
                <h4 class="modal-title" id="myModalLabel">About funny section</h4>
            </div>
            <div class="modal-body">
                <p>
                    Posts are acquired from <a href="http://www.reddit.com/r/funny" target="_blank">Reddit's funny sub reddit</a> in a maintenance task ran by Quartz scheduler. First the post in parsed then we try to get a direct link to funny picture in referred in post. They are usually shared using <a href="http://www.imgur.com" target="_blank">Imgur</a>. If we succeed in that we also gather few comments for it. Then it is stored into DB, currently it will keep few hundred of these.
                </p><p>
                    When you click next or previous, image is first loaded and after it is ready set visible, as only the links to images are in DB.
                </p><p>
                    Purpose for this page was to easy and fast way browse current hottest funny posts in reddit and having a laugh, without having multiple tabs and sites opened during it.
                </p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-info" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

@section scripts {
    <script>
        var page = 0; // current page (in api)
        var index = -1; // index of post in array
        var posts = null; // post array
        var busy = false; // are we loading more posts from api?

        // previous click
        function previous() {
            if (index > 0 && !busy) {
                index--;
                showPost();
            }
        }

        // next click
        function next() {
            // posts have been loaded
            if (posts && !busy) {
                // there is next post rdy
                if (posts.length > index + 1) {
                    index++;
                    loadPost();
                } else {
                    getMorePosts();
                }
            }
        }

        // load more posts from api
        function getMorePosts() {
            busy = true;
            page++;
            $.getJSON('/api/funny/posts?page=' + page, function (res) {
                busy = false;
                if (Object.prototype.toString.call(res) === '[object Array]') {
                    if (posts === null) {
                        // first
                        posts = res;
                        next();
                    } else {
                        if (res.length != 0) {
                            // add
                            posts = posts.concat(res);
                            next();
                        } else {
                            //  end of posts
                            showError("Sorry, no more posts.");
                        }
                    }
                } else {
                    showError("Sorry, error loading posts. Please try to refresh page.");
                }
            }).fail(function () {
                page--;
                busy = false;
                getMorePosts(); // try again
            });
        }

        // load post data
        function loadPost() {
            $('#Content').slideUp(100);
            $('#ContentLoading').fadeIn(100);
            var nextImage = new Image();
            nextImage.src = posts[index].ImageUrl;
            nextImage.onload = function () {
                showPost();
                $('#ContentLoading').fadeOut(100);
                $('#Content').slideDown(100);
            };
        }

        // set's post visible
        function showPost() {
            $('#Title').text(posts[index].Title);
            $('#Image').attr('src', posts[index].ImageUrl);
            $('#Source').attr('href', posts[index].SourceUrl);
            var commentDiv = $('<div/>');
            for (var i = 0; i < posts[index].Comments.length; i++) {
                $('<p>' + posts[index].Comments[i] + '</p>').appendTo(commentDiv);
            }
            $('#Comments').html(commentDiv);
        }

        // error
        function showError(msg) {
            $('#Title').text(msg);
        }

        // doc rdy
        $(function () {
            $('#Previous').click(previous);
            $('#Next').click(next);
            $('#Image').click(next);
            $('#about').click(function () { $('#aboutModal').modal('show'); });
            getMorePosts();
        });
    </script>
}
